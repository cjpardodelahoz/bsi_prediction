---
title: "Exploring *Bacteroides*-Proteobacteria association"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

### Relative abundance dynamics of *Bacteroides* and pathogenic Proteobacteria

We are going to visualize the change in relative abundance of *Bacteroides* and pathogenic Proteobacteria over time in the allo-HCT patient dataset. We want to determine if the dynamics are different in patients that suffered infections by the Proteobacteria compared to patients who did not get infected. For pathogens, we already expect their abundance increases and we are mostly replicating some of the results of Liao et al, 2021.

```{r}
# Load required libraries and functions
suppressMessages(library(tidyverse))
source("code/rfunctions/data_helpers.r")

# Prepare genus-level counts and metadata for plotting
tblrel_genus_meta <- prep_taxa_counts("genus")

# Plot the average relative abundance of Escherichia over time, grouped by infection status
tblrel_genus_meta %>%
  filter(!is.na(DayRelativeToNearestHCT), DayRelativeToNearestHCT >= -10, DayRelativeToNearestHCT <= 30) %>%
  group_by(DayRelativeToNearestHCT, Escherichia_infection) %>%
  summarise(avg_abundance = mean(`Escherichia-Shigella_abund`, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(x = DayRelativeToNearestHCT, y = avg_abundance, color = Escherichia_infection)) +
  geom_line(linewidth = 1) +
  scale_color_manual(values = c(`TRUE` = "#EE2C2C", `FALSE` = "gray60")) +
  labs(
  title = "Average relative abundance of escherichia over time",
   x = "Days Relative to Nearest HCT",
   y = "Average Relative Abundance of Escherichia",
   color = "Escherichia infection"
  ) +
  custom_theme +
  scale_y_continuous(limits = c(0, 1))    
    
# Plot the average relative abundance of Bacteroides over time, grouped by infection status
tblrel_genus_meta %>%
  filter(!is.na(DayRelativeToNearestHCT), DayRelativeToNearestHCT >= -15, DayRelativeToNearestHCT <= 30) %>%
  group_by(DayRelativeToNearestHCT, Escherichia_infection) %>%
  summarise(avg_abundance = mean(Bacteroides_abund, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(x = DayRelativeToNearestHCT, y = avg_abundance, color = Escherichia_infection)) +
  geom_line(linewidth = 1) +
  scale_color_manual(values = c(`TRUE` = "#EE2C2C", `FALSE` = "gray60")) +
  labs(
   title = "Average Relative Abundance of Bacteroides",
   x = "Days Relative to Nearest HCT",
   y = "Average relative abundance of Bacteroides over time",
   color = "Escherichia infection"
      ) +
  custom_theme +
  scale_y_continuous(limits = c(0, 0.25))

# Plot the average relative abundance of Bacteroides over time, grouped by infection status -- including SEs
tblrel_genus_meta %>%
  filter(!is.na(DayRelativeToNearestHCT), DayRelativeToNearestHCT >= -10, DayRelativeToNearestHCT <= 25) %>%
  group_by(DayRelativeToNearestHCT, Escherichia_infection) %>%
  summarise(
    avg_abundance = mean(Bacteroides_abund, na.rm = TRUE),
    n = sum(!is.na(Bacteroides_abund)),
    se = ifelse(n > 1, sd(Bacteroides_abund, na.rm = TRUE) / sqrt(n), NA_real_),
    .groups = "drop"
  ) %>%
  filter(!is.na(se)) %>%
  ggplot(aes(x = DayRelativeToNearestHCT, y = avg_abundance, color = Escherichia_infection, fill = Escherichia_infection)) +
  geom_ribbon(aes(ymin = avg_abundance - se, ymax = avg_abundance + se), alpha = 0.2, color = NA) +
  geom_line(linewidth = 1) +
  scale_color_manual(values = c(`TRUE` = "#EE2C2C", `FALSE` = "gray60")) +
  scale_fill_manual(values = c(`TRUE` = "#EE2C2C", `FALSE` = "gray60")) +
  labs(
    title = "Average Relative Abundance of Bacteroides",
    x = "Days Relative to Nearest HCT",
    y = "Average relative abundance of Bacteroides over time",
    color = "Escherichia infection",
    fill = "Escherichia infection"
  ) +
  custom_theme +
  scale_y_continuous(limits = c(0, 0.25))
```

After zooming-in and looking at the variation around the average relative abundance of *Bacteroides*, there seem to be some differences in the dynamic behavior between infected and non-infected patients, although the relative abundance estimates in infected patients are very noisy. I first tested this using a linear model:

```{r}
bacteroides_lm <- lm(Bacteroides_abund ~
  Escherichia_infection + factor(DayRelativeToNearestHCT),
  data = filter(tblrel_genus_meta, between(DayRelativeToNearestHCT, -10, 25)))
summary(bacteroides_lm)
```

which has a significant positive coefficient. But the significance is lost once I use a linear mixed effects model to account for within-patient variation:

```{r}
library(lme4)
bacteroides_lmm <- lmer(Escherichia_infection ~
  Bacteroides_abund+ factor(DayRelativeToNearestHCT) + (1|PatientID),
  data = filter(tblrel_genus_meta, between(DayRelativeToNearestHCT, -10, 25)))
summary(bacteroides_lmm)
```

This could be due to high within-patient variation relative to the effect size and low number of samples for each patient.

```{r}
load("analyses/processed_data/tblpatientday_clinical.RData")
tblpatientday_clinical <- tblpatientday_clinical %>%
  mutate(DayRelativeToNearestHCT = as.numeric(DayRelativeToNearestHCT))


tblrel_genus_meta_clinical <- tblrel_genus_meta %>%
  left_join(tblpatientday_clinical, by = c("PatientID", "DayRelativeToNearestHCT"))
  
# BSI logistic regression
bacteroides_bsi_glm <- glm(Escherichia_infection ~ 
  Bacteroides_abund + factor(DayRelativeToNearestHCT), 
  data = filter(tblrel_genus_meta, between(DayRelativeToNearestHCT, -10, 25)),
  family = binomial)
summary(bacteroides_bsi_glm)

# BSI logistic regression with random effect for patients IDs
bacteroides_bsi_glmm <- glmer(
  Escherichia_infection ~ Bacteroides_abund + factor(DayRelativeToNearestHCT) + (1 | PatientID),
  data = filter(tblrel_genus_meta, between(DayRelativeToNearestHCT, -10, 25)),
  family = binomial)
summary(bacteroides_bsi_glmm)

# Bacteroides association with Escherichia
bacteroides_proteo_lm <- lm(`Escherichia-Shigella_abund` ~ 
  Bacteroides_abund + factor(DayRelativeToNearestHCT), 
  data = filter(tblrel_genus_meta, between(DayRelativeToNearestHCT, -10, 25)))
summary(bacteroides_proteo_lm)

# Bacteroides association with Escerichia with random effect for patient IDs
bacteroides_proteo_lme <- lmer(`Escherichia-Shigella_abund` ~ 
  Bacteroides_abund + factor(DayRelativeToNearestHCT) + (1|PatientID), 
  data = filter(tblrel_genus_meta, between(DayRelativeToNearestHCT, -10, 25)))
summary(bacteroides_proteo_lme)

# Bacteroides association with Escherichia conditional on quinolone abx and random effect for patient ID
bacteroides_proteo_abx_lme <- lmer(
  `Escherichia-Shigella_abund` ~ 
    Bacteroides_abund * quinolones + 
    factor(DayRelativeToNearestHCT) + 
    (1 | PatientID),
  data = filter(tblrel_genus_meta_clinical, between(DayRelativeToNearestHCT, -10, 25)))
summary(bacteroides_proteo_abx_lme)

# Average Bacteroides abundance per patient and BSI
patient_summary <- tblrel_genus_meta %>%
  filter(between(DayRelativeToNearestHCT, -10, 25)) %>%
  group_by(PatientID) %>%
  summarise(
    mean_bacteroides = mean(Bacteroides_abund, na.rm = TRUE),
    ever_infected = as.integer(any(Escherichia_infection == 1)),
  )

glm(ever_infected ~ mean_bacteroides, data = patient_summary, family = binomial) %>% summary()
```

### Distribution of relative abundance in patients infected by *Enterococcus* vs *Escherichia*

```{r}
load("analyses/processed_data/tblpatientday_clinical.RData")

# Filter data for samples taken between DayRelativeToNearestHCT == 0 and DayRelativeToNearestHCT == 25
filtered_genus_meta <- tblrel_genus_meta %>%
  filter(DayRelativeToNearestHCT >= 0, DayRelativeToNearestHCT <= 25)

# Get the first infection day for Enterococcus and Escherichia for each patient
first_infection_days <- tblpatientday_clinical %>%
  mutate(DayRelativeToNearestHCT = as.numeric(as.character(DayRelativeToNearestHCT))) %>%
  group_by(PatientID) %>%
  summarise(
    Enterococcus_infection_day = ifelse(any(Enterococcus_infection == 1), 
                                        min(DayRelativeToNearestHCT[Enterococcus_infection == 1], na.rm = TRUE), 
                                        NA_real_),
    Escherichia_infection_day = ifelse(any(Escherichia_infection == 1), 
                                       min(DayRelativeToNearestHCT[Escherichia_infection == 1], na.rm = TRUE), 
                                       NA_real_),
    .groups = "drop"
  )

# Merge infection days with genus metadata
filtered_genus_meta <- filtered_genus_meta %>%
  left_join(first_infection_days, by = "PatientID")

# Filter data for each set
enterococcus_infected <- filtered_genus_meta %>%
  filter(!is.na(Enterococcus_infection_day), DayRelativeToNearestHCT <= Enterococcus_infection_day)

enterococcus_not_infected <- filtered_genus_meta %>%
  filter(is.na(Enterococcus_infection_day))

escherichia_infected <- filtered_genus_meta %>%
  filter(!is.na(Escherichia_infection_day), DayRelativeToNearestHCT <= Escherichia_infection_day)

escherichia_not_infected <- filtered_genus_meta %>%
  filter(is.na(Escherichia_infection_day))

# Combine Enterococcus data into a single data frame for plotting
enterococcus_combined <- bind_rows(
  enterococcus_infected %>% mutate(Group = "Infected with Enterococcus"),
  enterococcus_not_infected %>% mutate(Group = "Not infected with Enterococcus")
) %>%
  filter(`Enterococcus_abund` > 0)

# Create the density plot for Enterococcus
ggplot(enterococcus_combined, aes(x = Enterococcus_abund, fill = Group)) +
  geom_density(alpha = 0.6, size = 0.2) +
  scale_fill_manual(values = c(
    "Infected with Enterococcus" = "#0D7E2B",
    "Not infected with Enterococcus" = "gray75"
  )) +
  labs(
    x = "Relative abundance of Enterococcus",
    y = "Density",
    fill = "Patient status"
  ) +
  custom_theme +
  theme(legend.position = c(0.5, 0.8))

# Save the plot
ggsave("document/plots/rel_density_enterococcus.pdf", width = 3.6, height = 3.6)

# Combine Escherichia data into a single data frame for plotting
escherichia_combined <- bind_rows(
  escherichia_infected %>% mutate(Group = "Infected with Escherichia"),
  escherichia_not_infected %>% mutate(Group = "Not infected with Escherichia")
)

# Filter out zeros for Escherichia abundance
escherichia_combined_filtered <- escherichia_combined %>%
  filter(`Escherichia-Shigella_abund` > 0.01)

# Create the density plot for Escherichia (excluding zeros)
ggplot(escherichia_combined_filtered, aes(x = `Escherichia-Shigella_abund`, fill = Group)) +
  geom_density(alpha = 0.6, size = 0.2) +
  scale_fill_manual(values = c(
    "Infected with Escherichia" = "#EE2C2C",
    "Not infected with Escherichia" = "gray75"
  )) +
  labs(
    x = "Relative abundance of Escherichia",
    y = "Density",
    fill = "Patient status"
  ) +
  custom_theme +
  theme(legend.position = c(0.5, 0.8))

# Save the plot
ggsave("document/plots/rel_density_escherichia.pdf", width = 3.6, height = 3.6)
```

```{r}
# Filter samples for abundance > 0.01 and days between 0 and 25
scatter_data <- tblrel_genus_meta %>%
  filter(
    DayRelativeToNearestHCT >= 0, DayRelativeToNearestHCT <= 25,
    `Escherichia-Shigella_abund` > 0.01,
    Bacteroides_abund > 0.01
  )

# Make scatterplot stratified by Escherichia infection status
ggplot(scatter_data, aes(x = Bacteroides_abund, y = `Escherichia-Shigella_abund`, color = Escherichia_infection)) +
  geom_point(alpha = 0.7, size = 2) +
  scale_color_manual(values = c(`TRUE` = "#EE2C2C", `FALSE` = "gray60")) +
  labs(
    x = "Relative abundance of Bacteroides",
    y = "Relative abundance of Escherichia",
    color = "Escherichia infection") +
  custom_theme +
  theme(legend.position = c(0.7, 0.8))

ggsave("document/plots/rel_bacteroides_escherichia.pdf", width = 3.6, height = 3.6)
```

### Patient-specific time series


```{r, echo = FALSE, eval = FALSE}
# Prepare asv-level counts and metadata for plotting
tblrel_asv_meta <- prep_taxa_counts("asv")

# Load taxonomy data with colors and filter to tax level
taxlevel_color <- read_csv("data/tblASVtaxonomy_silva132_v4v5_filter.csv") %>%
  select(ASV, HexColor, ColorOrder) %>%
  distinct(ASV, .keep_all = TRUE)

# Filter data for PatientID 1511 and time points between -5 and 20
patient_1511_data <- tblrel_asv_meta %>%
  filter(PatientID == 1511, DayRelativeToNearestHCT >= -5, DayRelativeToNearestHCT <= 20) %>%
  select(DayRelativeToNearestHCT, ends_with("_abund")) %>%
  pivot_longer(
    cols = ends_with("_abund"),
    names_to = "Taxa",
    values_to = "RelativeAbundance"
  ) %>%
  mutate(Taxa = str_remove(Taxa, "_abund"))

# Merge patient data with taxonomy colors and order by ColorOrder
patient_1511_data <- patient_1511_data %>%
  left_join(taxlevel_color, by = c("Taxa" = "ASV")) %>%
  arrange(ColorOrder)

# Plot microbial composition for PatientID 1511 with assigned colors and order
ggplot(patient_1511_data, aes(x = DayRelativeToNearestHCT, y = RelativeAbundance, fill = reorder(Taxa, -ColorOrder))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_manual(values = setNames(patient_1511_data$HexColor, patient_1511_data$Taxa)) +
  labs(
    title = "Microbial Composition of Patient 1511",
    x = "Days Relative to Nearest HCT",
    y = "Relative Abundance"
  ) +
  custom_theme +
  theme(legend.position = "none")
```

### Cooccurrence

```{r}
# Transform the table into a binary presence-absence matrix
binary_matrix_full <- tblrel_genus_meta %>%
  select(ends_with("_abund")) %>%
  mutate(across(everything(), ~ ifelse(. >= 0.001, 1, 0))) %>%
  as.matrix()
binary_matrix_infected <- tblrel_genus_meta %>%
  filter(Escherichia_infection == TRUE) %>%
  select(ends_with("_abund")) %>%
  mutate(across(everything(), ~ ifelse(. >= 0.001, 1, 0))) %>%
  as.matrix()

# Calculate the cooccurrence matrix
cooccurrence_matrix_full <- t(binary_matrix_full) %*% binary_matrix_full %>%
  as.matrix()
cooccurrence_matrix_infected <- t(binary_matrix_infected) %*% binary_matrix_infected %>%
  as.matrix()

# Frequency of Bacteroides and Escherichia in the samples
bacteroides_freq_full <- cooccurrence_matrix_full["Bacteroides_abund", "Bacteroides_abund"]
escherichia_freq_full <- cooccurrence_matrix_full["Escherichia-Shigella_abund", "Escherichia-Shigella_abund"]
bacteroides_freq_infected <- cooccurrence_matrix_infected["Bacteroides_abund", "Bacteroides_abund"]
escherichia_freq_infected <- cooccurrence_matrix_infected["Escherichia-Shigella_abund", "Escherichia-Shigella_abund"]

# Frequencies of Bacteroides and Escherichia cooccurrence
cooccurrence_freq_full <- cooccurrence_matrix_full["Bacteroides_abund", "Escherichia-Shigella_abund"]
cooccurrence_freq_infected <- cooccurrence_matrix_infected["Bacteroides_abund", "Escherichia-Shigella_abund"]
```

 - *Escherichia* occurs in `r escherichia_freq_full` or `r (escherichia_freq_full/nrow(binary_matrix_full))*100`% of the samples, and in `r escherichia_freq_infected` or `r (escherichia_freq_infected/nrow(binary_matrix_infected))*100`% of the samples from patients who had positive blood cultures of *E. coli*
 - *Bacteroides* occurs in `r bacteroides_freq_full` or `r (bacteroides_freq_full/nrow(binary_matrix_full))*100`% of the samples, and in `r bacteroides_freq_infected` or `r (bacteroides_freq_infected/nrow(binary_matrix_infected))*100`% of the samples from patients who had positive blood cultures of *E. coli*
 - Bacteroides and *Escherichia* cooccur in `r cooccurrence_freq_full` samples, which corresponds to `r (cooccurrence_freq_full/escherichia_freq_full)*100`% of the samples with *Escherichia* and `r (cooccurrence_freq_full/bacteroides_freq_full)*100`% of the samples with *Bacteroides*.
 - Bacteroides and *Escherichia* cooccur in `r cooccurrence_freq_infected` samples from infected patients, which corresponds to `r (cooccurrence_freq_infected/escherichia_freq_infected)*100`% of the samples from infected patients colonized with *Escherichia* and `r (cooccurrence_freq_infected/bacteroides_freq_infected)*100`% of the samples infected patients colonized with  with *Bacteroides*.