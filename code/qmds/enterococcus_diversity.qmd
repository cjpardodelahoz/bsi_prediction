---
title: "Dynamics of *Enterococcus* diversity"
engine: knitr
format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

This is an initial exploration of the dynamics of *Enteroccocus* diversity in the HCT patient population. I have the following goals:

 - Stratify patients with *Enterococcus* dominations between those who did and did not get *Enterococcus* infections.
 - Link 16S ASVs to full-length 16S sequences assembled from metagenomes and the corresponding species identities.
 - Characterize genome-level strain diversity of *Enterococcus* across all samples with metagenomes
 - Determine whether dominating strains of *Enterococcus* colonize before or after hospitalization for HCT
 - Quantify *Enterococcus* strain sharing between patients
 - Quantify *Enterococcus* strain diversity within patients and through time during dominations

 ## Summary of dominations and inections
 
 It is already

```{r}
 # Load required libraries and functions
suppressMessages(library(tidyverse))
source("code/rfunctions/data_helpers.r")

# Prepare genus-level counts
tblrel_genus_meta <- prep_taxa_counts("genus")

# Summarize patients with Enterococcus dominations and infections
summary_data <- tblrel_genus_meta %>%
  group_by(PatientID) %>%
  summarize(
    ever_dominated = any(Enterococcus_abund >= 0.3, na.rm = TRUE),
    ever_infected = any(Enterococcus_infection == TRUE, na.rm = TRUE)
  )

# Prepare data for plotting
plot_summary_data <- summary_data %>%
  mutate(
    domination_status = ifelse(ever_dominated, "Dominated", "Not Dominated"),
    infection_status = ifelse(ever_infected, "Infected", "Not Infected")
  ) %>%
  group_by(domination_status, infection_status) %>%
  summarize(count = n(), .groups = "drop")

# Create the bar plot
ggplot(plot_summary_data, aes(x = domination_status, y = count, fill = infection_status)) +
  geom_bar(stat = "identity", position = "stack") +
  geom_text(aes(label = count), position = position_stack(vjust = 0.5), color = "black") +
  scale_fill_manual(
    values = c("Infected" = "#0D7E2B", "Not Infected" = "gray75")
  ) +
  labs(
    x = "Domination status",
    y = "Number of patients",
    fill = "Infection status"
  ) +
  custom_theme
```

Now,

```{r}
# Load sample metadata
tblASVsamples <- read_csv("data/tblASVsamples.csv")

# Filter for patients who got dominated and infected with at least one AccessionShotgun
dominated_infected <- summary_data %>%
  filter(ever_dominated, ever_infected) %>%
  inner_join(tblASVsamples, by = "PatientID") %>%
  filter(!is.na(AccessionShotgun)) %>%
  pull(PatientID) %>%
  unique()

# Filter for patients who got dominated but not infected with at least one AccessionShotgun
dominated_not_infected <- summary_data %>%
  filter(ever_dominated, !ever_infected) %>%
  inner_join(tblASVsamples, by = "PatientID") %>%
  filter(!is.na(AccessionShotgun)) %>%
  pull(PatientID) %>%
  unique()

# Print the results
dominated_infected
dominated_not_infected
```

## Linking 16S ASVs to metagenome

## *Enterococcus* genomic diversity

### MAG quality assesment and dereplication

 I compiled the *Enterococcus* MAGs binned as described in the [Exploring *Bacteroides* molecular variation]() section:

 ```{bash, eval=FALSE}
GTDB_FILE="analyses/yan_sd_2022/binning/gtdb/gtdbtk.bac120.summary.tsv"
BIN_DIR="analyses/yan_sd_2022/binning/compiled"
OUTPUT_DIR="analyses/enterococcus_diversity/genomes/mags"

# Create the output directory if it doesn't exist
mkdir -p ${OUTPUT_DIR}

# Extract filenames of bins classified in the family Enterococcaceae and copy them
awk -F'\t' 'NR > 1 && $2 ~ /f__Enterococcaceae/ {print $1}' "${GTDB_FILE}" | while read -r bin_file; do
  full_path="${BIN_DIR}/${bin_file}.fna"
  if [[ -f ${full_path} ]]; then
    cp "${full_path}" "${OUTPUT_DIR}/"
  else
    echo "File ${full_path} not found, skipping..."
  fi
done
```

And then I ran CheckM to assess genome quality:

```{bash, eval=FALSE}
sbatch code/scripts/enterococcus_diversity/enterococcus_checkm2.sh
# Modify headers for dRep
sed -i "s|Name|genome|" analyses/enterococcus_diversity/genomes/checkm2/quality_report.tsv
sed -i "s|Completeness|completeness|" analyses/enterococcus_diversity/genomes/checkm2/quality_report.tsv
sed -i "s|Contamination|contamination|" analyses/enterococcus_diversity/genomes/checkm2/quality_report.tsv
```

```{r, eval=FALSE}
suppressMessages(library(tidyverse))

# Load CheckM2 quality report
checkm_quality_report <- suppressMessages(read_tsv("analyses/enterococcus_diversity/genomes/checkm2/quality_report.tsv"))

# Save the quality report as a CSV
write_csv(checkm_quality_report, "analyses/enterococcus_diversity/genomes/checkm2/quality_report.csv")
```

I also calculated ANI between all genome pairs and dereplicated them at 98% ANI:

```{bash, eval=FALSE}
sbatch code/scripts/enterococcus_diversity/fastani.sh
sbatch code/scripts/enterococcus_diversity/drep_98.sh
```

### Core-genome diversity summary

I classified the MAGs into the STs scheme defined by [Homan et al. 2002](https://journals.asm.org/doi/10.1128/jcm.40.6.1963-1971.2002) using the `mlst` software:

```{bash, eval=FALSE}
sbatch code/scripts/enterococcus_diversity/mlst.sh
```


```{r}
# Load required library and custom functions
suppressMessages(library(tidyverse))
suppressMessages(library(ape))
source("code/rfunctions/data_helpers.r")

# Load and merge GTBD results
meta_gtdb <- suppressMessages(read_tsv("analyses/yan_sd_2022/binning/gtdb/gtdbtk.bac120.summary.tsv"))

# Load CheckM2 results
checkm <- suppressMessages(read_tsv("analyses/enterococcus_diversity/genomes/checkm2/quality_report.tsv"))

# Load MLST results
mlst_2002 <- read.csv("analyses/enterococcus_diversity/genomes/mlst/mlst_2002.csv", header = FALSE, fill = TRUE)
colnames(mlst_2002) <- c("genome_path",
                          "scheme",
                          "ST",
                          paste0("allele_", seq(1:7))
                          )
mlst_2002 <- mlst_2002 %>%
  mutate(genome = tools::file_path_sans_ext(basename(genome_path)))

# Compile MAG data
enterococcus_mag_data <- checkm %>%
  mutate(binning_strategy = case_when(
            str_detect(Name, "single") ~ "single",
            str_detect(Name, "multi") ~ "multi"
          ),
          sample = str_split(Name, "_", simplify = TRUE)[, 2]
        ) %>%
  left_join(meta_gtdb, by = c("Name" = "user_genome")) %>%
  left_join(mlst_2002, by = c("Name" = "genome")) %>%
  mutate(species = str_remove(classification, ".*s__")) %>%
  filter(Completeness >= 70 & Contamination <= 5 & str_detect(classification, "g__Enterococcus"))

# Load FastANI results
fastani <- read_tsv("analyses/enterococcus_diversity/genomes/fastani/fastani_results.tsv", col_names = FALSE)
colnames(fastani) <- c("genome1", "genome2", "ANI", "aligned_fragments", "total_fragments")
fastani <- fastani %>% 
  mutate(alignment_fraction = aligned_fragments/total_fragments,
        genome1 =  tools::file_path_sans_ext(basename(genome1)),
        genome2 =  tools::file_path_sans_ext(basename(genome2)))

        # Filter genomes for Enterococcus_B faecium
        faecium_genomes <- enterococcus_mag_data %>%
          filter(species == "Enterococcus_B faecium" & binning_strategy == "multi") %>%
          pull(Name)

        # Subset FastANI results for these genomes
        faecium_fastani <- fastani %>%
          filter(genome1 %in% faecium_genomes & genome2 %in% faecium_genomes) %>%
          select(genome1, genome2, ANI)

        # Convert ANI to a distance matrix
        faecium_dist_matrix <- faecium_fastani %>%
          pivot_wider(names_from = genome2, values_from = ANI, values_fill = 0) %>%
          column_to_rownames("genome1") %>%
          as.matrix()

        # Convert ANI to distance (1 - ANI/100)
        faecium_dist_matrix <- 100 - faecium_dist_matrix

        # Create a phylogenetic tree using hierarchical clustering with the average method
        faecium_hclust <- hclust(as.dist(faecium_dist_matrix), method = "complete")
        diag(faecium_dist_matrix) <- 0

        # Map ST values to genome names and assign colors
        st_colors <- enterococcus_mag_data %>%
          filter(Name %in% faecium_genomes) %>%
          select(Name, ST) %>%
          mutate(ST = factor(ST)) %>%
          mutate(color = scales::hue_pal()(nlevels(ST))[as.numeric(ST)]) %>%
          select(Name, color) %>%
          deframe()

        # Convert hclust object to a phylogenetic tree
        faecium_hclust_tree <- as.phylo(faecium_hclust)

        # Plot the tree with base R and color tip labels by ST
        plot(faecium_hclust_tree, tip.color = tip_colors_hclust, cex = 0.8)
        # Add a scale on the x-axis that connects branch lengths to ANI distances
        axisPhylo()

        ggtree(faecium_tree) +
        geom_tiplab() +
        geom_treescale()
        write.tree(faecium_tree, "tree.tree")
```

## Timing of *Enterococcus* colonization

### *Enterococcus* detection across metagenomic libraries

I tested the detection of the NC dereplicated MAGs of X *Enterococcus* species (*Enterococcus faecium*, *Enterococcus faecalis*, ) across all metagenomic libraries. I did this by mapping the reads from all samples to these MAGs. Then, a detection in a sample will be positive if there is >50% of the MAG covered by at least one read.

```{bash, eval=FALSE}
# Copy representative dereplicated NC MAGs
mkdir -p analyses/enterococcus_diversity/detection/ref_mags
cp analyses/enterococcus_diversity/genomes/drep/dereplicated_genomes/*.fna analyses/enterococcus_diversity/detection/ref_mags

# Run detection script
# Submit the first job and capture its job ID
jid=$(sbatch --array=1-1 code/scripts/enterococcus_diversity/enterococcus_detection.sh | awk '{print $4}') #8244928

# Submit the rest, dependent on the first finishing
sbatch --dependency=afterok:$jid --array=2-395%15 code/scripts/enterococcus_diversity/enterococcus_detection.sh #8246800
```

### *Enterococcus* detection with 16S

## Strain diversity and dynamics

I dereplicated all the MAGs recovered from the full metagenomes (both from single and multi strategies) at 98% ANI to generate a reference library to call variants for the strain analyses. I considered only MAGs with >50% completeness and <15% contamination:

```{bash, eval=FALSE}
sbatch code/scripts/enterococcus_diversity/drep_all_mags_98.sh #8285225
```

### Within-patient strain diveristy and dynamics

```{bash, eval=FALSE}
jid=$(sbatch --array=1-1 code/scripts/enterococcus_diversity/floria_phasing.sh | awk '{print $4}') #8354300
```

### Within-patient strain sharing